#include<stdio.h>

int main() {
    int a[4][4], b[4][4], c[4][4], i, j;
    int m1, m2, m3, m4 , m5, m6, m7;

    printf("Enter the 16 elements of first matrix: ");
    for(i = 0; i < 4; i++)
        for(j = 0; j < 4; j++)
            scanf("%d", &a[i][j]);

    printf("Enter the 16 elements of second matrix: ");
    for(i = 0; i < 4; i++)
        for(j = 0; j < 4; j++)
            scanf("%d", &b[i][j]);

    printf("\nThe first matrix is\n");
    for(i = 0; i < 4; i++){
        printf("\n");
        for(j = 0; j < 4; j++)
            printf("%d\t", a[i][j]);
    }

    printf("\nThe second matrix is\n");
    for(i = 0; i < 4; i++){
        printf("\n");
        for(j = 0; j < 4; j++)
            printf("%d\t", b[i][j]);
    }

    m1= (a[0][0] + a[1][1] + a[2][2] + a[3][3]) * (b[0][0] + b[1][1] + b[2][2] + b[3][3]);
    m2= (a[2][0] + a[2][1] + a[2][2] + a[2][3]) * b[0][0];
    m3= a[0][0] * (b[0][1] - b[1][1]) + a[1][1] * (b[1][0] - b[0][0]);
    m4= (a[0][0] + a[0][1]) * b[1][1] - a[0][0] * b[1][1];
    m5= (a[0][0] + a[1][1]) * (b[2][0] + b[2][1]) - a[1][1] * (b[0][0] + b[0][1]);
    m6= (a[1][0] - a[0][0]) * (b[0][0] + b[0][1]) + (a[0][1] - a[1][1]) * (b[1][0] + b[1][1]);
    m7= (a[0][0] - a[2][0]) * (b[2][0] + b[2][1] + b[2][2] + b[2][3]);

    c[0][0] = m1 + m4 - m5 + m7;
    c[0][1] = m3 + m5;
    c[0][2] = m2 + m4;
    c[0][3] = m1 - m2 + m3 + m6;
    c[1][0] = m3 + m5;
    c[1][1] = m1 + m4;
    c[1][2] = m2 - m6;
    c[1][3] = m2 + m4;
    c[2][0] = m2 + m4;
    c[2][1] = m1 - m2 + m3 + m6;
    c[2][2] = m1 + m4;
    c[2][3] = m2 - m6;
    c[3][0] = m2 - m6;
    c[3][1] = m3 + m5;
    c[3][2] = m1 + m4;
    c[3][3] = m1 - m2 + m3 + m7;

    printf("\nAfter multiplication using Strassen's algorithm \n");
    for(i = 0; i < 4; i++){
        printf("\n");
        for(j = 0; j < 4; j++)
            printf("%d\t", c[i][j]);
    }

    return 0;
}
